<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.reserve.app.mapper.AdminMapper">

	<select id="getBranchNameList" parameterType="map"  resultType="map">
		SELECT tb_branch_mng.branch_code, branch_name
		FROM tb_branch_mng, tb_user
		WHERE 
			tb_branch_mng.branch_code != 'b0000'
			AND tb_user.user_role like 'SUPERADMIN'
		ORDER BY tb_branch_mng.branch_code
	</select>

	<select id="getUserList" parameterType="map" resultType="map">
		SELECT id, name, phone_number, due_date, hospital, user_role, remark, to_char(created_dt,'YYYY-MM-DD') as created_dt, to_char(modified_dt,'YYYY-MM-DD') as modified_dt, branch_code
		FROM tb_user
		<where>
			user_role like 'USER'
			<choose>
				<when test="super_branch_code == null or super_branch_code == ''">
					and branch_code = #{branch_code}
				</when>
				<otherwise>
					and branch_code = #{super_branch_code}
				</otherwise>
			</choose>
			<if test='userIdOrName != null and userIdOrName != ""'>
				and (
					upper(id) like '%' || upper(#{userIdOrName}) || '%' 
					or upper(name) like '%' || upper(#{userIdOrName}) || '%'
				)
			</if>
			<if test='name!=null and name!=""'>and upper(name) like '%'||upper(#{name})||'%'</if>
			<if test='phoneNumber!=null and phoneNumber!=""'>and phone_number like '%'||upper(#{phoneNumber})||'%'</if>
			<if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
				and created_dt BETWEEN to_timestamp(#{startDate}, 'YYYY-MM-DD') AND to_timestamp(#{endDate}, 'YYYY-MM-DD') + INTERVAL '1 day' - INTERVAL '1 second'
			</if>
		</where>
		order by created_dt desc, id asc
	</select>
	
	<update id="resetPassword" parameterType="map">
		update tb_user
		set password = #{user_pw},
			modified_dt = now(),
			modified_id = #{login_id}
		where id = #{user_id}
	</update>
	
	<insert id="addAccount" parameterType="map">
		insert into tb_user (
			id, password, name, phone_number, due_date, hospital, user_role, remark, created_id, created_dt, modified_id, modified_dt, branch_code, user_status
		)
		values (
			#{id}, #{encoded_password}, #{name}, #{phone_number}, #{due_date}, #{hospital}, 'USER', #{remark}, #{login_id}, now(), #{login_id}, now(), #{branch_code}, 'Y'
		)
	</insert>
	
	<update id="updateAccount" parameterType="map">
		update tb_user
		set id = #{id}, 
			name = #{name},
			phone_number = #{phone_number},
			due_date = #{due_date},
			hospital = #{hospital},
			user_status = #{user_status},
			remark = #{remark}, 
			modified_id = #{login_id}, 
			modified_dt = now() 
		where id = #{id}
	</update>

	<select id="checkId" parameterType="map" resultType="int">
		SELECT count(id)
		FROM tb_user
		WHERE 	id = #{add_id}
	</select>
	
	<select id="getBranchList" parameterType="map"  resultType="map">
		SELECT seq_no, branch_code as branch_code_col, branch_name, join_code, to_char(created_dt,'YYYY-MM-DD') as created_dt
		FROM tb_branch_mng
		<where>
			branch_code != 'b0000'
			<if test='branchCode!=null and branchCode!=""'>and branch_code like '%'|| #{branchCode} ||'%'</if>
			<if test='branchName!=null and branchName!=""'>and branch_name like '%'|| #{branchName} ||'%'</if>
			<if test='joinCode!=null and joinCode!=""'>and join_code like '%'|| #{joinCode} ||'%'</if>
		</where>
		ORDER BY branch_code;
	</select>

	<insert id="addBranchInfo" parameterType="map">
		insert into tb_branch_mng (
			branch_code, branch_name, join_code, created_id, created_dt, modified_id, modified_dt
		)
		values (
			#{branch_code_col}, #{branch_name}, #{join_code}, #{login_id}, now(), #{login_id}, now()
		);
		insert into tb_branch_info (
			branch_code, branch_name, created_id, created_dt, modified_id, modified_dt
		)
		values (
			#{branch_code_col}, #{branch_name}, #{login_id}, now(), #{login_id}, now()
		)
	</insert>

	
	<update id="updateBranchInfo" parameterType="map">
		update tb_branch_mng
		set 
			branch_name = #{branch_name},
			modified_id = #{login_id},
			modified_dt = now()
		where seq_no = #{seq_no} and branch_code = #{branch_code_col}
	</update>
	
	<delete id="deleteBranchInfo" parameterType="map">
		delete from tb_branch_mng where seq_no=#{seq_no}
	</delete>

	<select id="getReservationMasterData" parameterType="map"  resultType="map">
		SELECT
			a.branch_code,
			a.rsv_month,
			a.rsv_date,
			a.rsv_worker,
			a."1t",
			COUNT(b.select_time) FILTER (WHERE b.select_time = '1t') AS "1t_cnt",
			a."2t",
			COUNT(b.select_time) FILTER (WHERE b.select_time = '2t') AS "2t_cnt",
			a."3t",
			COUNT(b.select_time) FILTER (WHERE b.select_time = '3t') AS "3t_cnt",
			a."4t",
			COUNT(b.select_time) FILTER (WHERE b.select_time = '4t') AS "4t_cnt",
			a."5t",
			COUNT(b.select_time) FILTER (WHERE b.select_time = '5t') AS "5t_cnt",
			a."6t",
			COUNT(b.select_time) FILTER (WHERE b.select_time = '6t') AS "6t_cnt",
			a."7t",
			COUNT(b.select_time) FILTER (WHERE b.select_time = '7t') AS "7t_cnt",
			a."8t",
			COUNT(b.select_time) FILTER (WHERE b.select_time = '8t') AS "8t_cnt",
			a."9t",
			COUNT(b.select_time) FILTER (WHERE b.select_time = '9t') AS "9t_cnt",
			a."10t",
			COUNT(b.select_time) FILTER (WHERE b.select_time = '10t') AS "10t_cnt"
		FROM tb_reservation_master a
			LEFT OUTER JOIN tb_reservation_list b on   a.branch_code = b.branch_code AND a.rsv_month = b.rsv_month AND a.rsv_date = b.rsv_date
		<where>
			<choose>
				<when test="super_branch_code == null or super_branch_code == ''">
					a.branch_code = #{branch_code} and a.rsv_month = #{rsv_month}
				</when>
				<otherwise>
					a.branch_code = #{super_branch_code} and a.rsv_month = #{rsv_month}
				</otherwise>
			</choose>
		</where>
		
		
		GROUP BY
			a.branch_code,
			a.rsv_month,
			a.rsv_date,
			a.rsv_worker
		ORDER BY
			a.rsv_month,
			a.rsv_date
	</select>

	<insert id="addReservationMasterData" parameterType="list">
		insert into tb_reservation_master (
			branch_code, rsv_month, rsv_date, rsv_worker,
			"1t", "2t", "3t", "4t", "5t", 
			"6t", "7t", "8t", "9t", "10t", 
			created_id, created_dt, modified_id, modified_dt
		)
		values 
		<foreach collection="list" item="item" separator=",">
			(
				#{branch_code}, #{item.rsv_month}, #{item.rsv_date},#{item.rsv_worker}::int,
				#{item.1t}, #{item.2t}, #{item.3t}, #{item.4t}, #{item.5t},
				#{item.6t}, #{item.7t}, #{item.8t}, #{item.9t}, #{item.10t},
				#{login_id}, now(), #{login_id}, now()
			)
		</foreach>
	</insert>

	<delete id="deleteReservationMasterData" parameterType="string">
		delete from tb_reservation_master 
		where branch_code=#{branch_code} and rsv_month=#{stdMonth}
	</delete>
	
	<select id="getBranchInfo" parameterType="map"  resultType="map">
		SELECT worker_num, "1t_name", "2t_name", "3t_name", "4t_name", "5t_name", "6t_name", "7t_name", "8t_name", "9t_name", "10t_name"
		FROM tb_branch_info
		<where>
			<choose>
				<when test="super_branch_code == null or super_branch_code == ''">
					and branch_code = #{branch_code}
				</when>
				<otherwise>
					and branch_code = #{super_branch_code}
				</otherwise>
			</choose>
		</where>
	</select>
</mapper>